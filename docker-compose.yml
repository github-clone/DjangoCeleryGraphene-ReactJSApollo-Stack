version: '3'

services:

  front-service:
    build: frontend
    volumes:
      - ./frontend:/usr/src/app
    depends_on:
      - back-service
    ports:
      - "3000:3000"
    command: npm start
    networks:
      - compose-network

  back-service: &back-service
    build: .
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    depends_on:
      - postgres-service
    networks:
      - compose-network

  postgres-service:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "adventure"
    ports:
      - "5432:5432"
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    networks:
      - compose-network

  pgadmin-service:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "ash@poke.com"
      PGADMIN_DEFAULT_PASSWORD: "pikachu"
    ports:
      - "16543:80"
    depends_on:
      - postgres-service
    networks:
      - compose-network

  rabbitmq-service:
    image: rabbitmq:3.7.0-management-alpine
    ports:
      - "15672:15672"
    networks:
      - compose-network

  celery-worker-service:
      <<: *back-service
      command: celery -A adventure worker --loglevel=info
      ports: []
      depends_on:
        - rabbitmq-service
        - postgres-service

networks:
  compose-network:
    driver: bridge
